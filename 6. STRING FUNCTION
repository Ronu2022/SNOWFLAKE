CREATE DATABASE RM_STRING_FUNCTION;
USE DATABASE RM_STRING_FUNCTION;


-- SUBSTR()

SELECT substr('Hello World',1,4);
SELECT substr('Hello World',2,4);
SELECT substr('HELLO WORLD',-11,11);
SELECT substr('Hello',-2,2); 

SELECT substr('RONU MONDEEP MOHANTY',1,4) AS first_name;
SELECT substr('RONU MONDEEP MOHANTY',6,7) AS middle_name;
SELECT substr('RONU MONDEEP MOHANTY',14,7) AS last_name;

-- Find the first letter of your Name and Last letter of your Name

SELECT 'RONU MONDEEP MOHANTY' AS name, 
CONCAT(substr('RONU MONDEEP MOHANTY',1,1),substr('RONU MONDEEP MOHANTY',20,1)) AS initials;

SELECT 'RONU MONDEEP MOHANTY' AS name, 
substr('RONU MONDEEP MOHANTY',1,1) || substr('RONU MONDEEP MOHANTY',20,1) AS initials; 
-- || could be used in place of Concat



CREATE OR REPLACE TABLE AGENTS
 (
    AGENT_CODE CHAR(6) NOT NULL PRIMARY KEY,
    AGENT_NAME CHAR(40) ,
    WORKING_AREA CHAR(35),
    COMMISSION NUMBER(10,2) DEFAULT 0.05,
    PHONE_NO CHAR(15),
    COUNTRY VARCHAR2(25)
);

INSERT INTO AGENTS VALUES ('A007', 'Ramasundar', 'Bangalore',0.15,'077-25814763', '');
INSERT INTO AGENTS(AGENT_CODE,AGENT_NAME,WORKING_AREA)
VALUES ('A110', 'Anand', 'Germany');
INSERT INTO AGENTS VALUES ('A003', 'Alex ', 'London', '0.13', '075-12458969', '');
INSERT INTO AGENTS VALUES ('A008', 'Alford', 'New York', '0.12', '044-25874365', '');
INSERT INTO AGENTS VALUES ('A011', 'Ravi Kumar', 'Bangalore', '0.15', '077-45625874', '');
INSERT INTO AGENTS VALUES ('A010', 'Santakumar', 'Chennai', '0.14', '007-22388644', '');
INSERT INTO AGENTS VALUES ('A012', 'Lucida', 'San Jose', '0.12', '044-52981425', '');
INSERT INTO AGENTS VALUES ('A005', 'Anderson', 'Brisban', '0.13', '045-21447739', '');
INSERT INTO AGENTS VALUES ('A001', 'Subbarao', 'Bangalore', '0.14', '077-12346674', '');
INSERT INTO AGENTS VALUES ('A002', 'Mukesh', 'Mumbai', '0.11', '029-12358964', '');
INSERT INTO AGENTS VALUES ('A006', 'McDen', 'London', '0.15', '078-22255588', '');
INSERT INTO AGENTS VALUES ('A004', 'Ivan', 'Torento', '0.15', '008-22544166', '');
INSERT INTO AGENTS VALUES ('A009', 'Benjamin', 'Hampshair', '0.11', '008-22536178', '')

SELECT * FROM AGENTS;

--Example 2: Get the substring from a specific string by using table data
select AGENT_CODE,AGENT_NAME,substring(AGENT_NAME,1,2) AS AGENT_INITIALS from agents;

---------------------------------------------------------------------------------------------------------
                                                      --CONCAT:
---------------------------------------------------------------------------------------------------------

-- CONCANATING AGENT_CODE AND AGENT_NAME COLOUMN OF AGENT TABLE.

 SELECT CONCAT( AGENT_CODE, AGENT_NAME) AS AGENT_DETAIL
 FROM AGENTS;


 -- . CONCATNATING TWO COLOUMN WITH SPACE IN BETWEEN

 SELECT CONCAT( AGENT_CODE, ' ' ,AGENT_NAME) AS AGENT_DETAIL
 FROM AGENTS;

 -- CONCANATING TWO COLOUMN USING “ || ”

 SELECT AGENT_CODE || ' ' || AGENT_NAME AS AGENT_DETAIL FROM
 AGENTS;

 -- CONCAT_WS:
    -- requires at least two arguments, and uses the first argument to separate all following arguments.
    SELECT CONCAT_WS('-', 'KA','India') as state_country;


-- CONCATENATE TWO COLUMN AND USING SEPARATER AS ‘ - ‘ , SEPARATE TWO COLUMN.
SELECT CONCAT_WS('–', AGENT_CODE, AGENT_NAME) AS AGENT_DETAIL FROM AGENTS;
-- CONCAT IS is FASTER



------------------------------------------------------------------------------------------------------
                                          -- TRIMMING
------------------------------------------------------------------------------------------------------

-- Remove leading ‘0’ and ‘#’ characters from a string:

select ltrim('#0000AISHWARYA', '#0'); 
-- In the set '#0', '#' and '0' are treated as individual characters, not as a substring.
-- So, LTRIM will remove leading occurrences of either '#' or '0' individually, not the substring '#0'



select ltrim('', )

-- Remove leading ‘ ’ from a string:
select ltrim('  Ronu',' ');

-- Remove trailing 0 and . characters from a string
select rtrim('$125.00','0'); -- o/p: $125.
select rtrim('$125.02','.0'); -- o/p: $125.02
select rtrim('$125.02','0.'); -- o/p  $125.02
select RTRIM ('$125.00', '0.'); -- o/p  $125

select RTRIM ('$125.20', '0.'); -- o/p  $125.2
select RTRIM ('$125.20', '0.2'); -- o/p  $125
select RTRIM ('$125.20', '.'); -- o/p  $125.20

--Trim: removes both leading and trailing spaces.

select TRIM('❄-❄ABC-❄-', '❄-') as trimmed_string;

SELECT TRIM('********T E S T I N G 1 2 3 4********','*') AS TRIMMED_SPACE;

SELECT TRIM('********T E S T I*N*G 1 2 3 4********','*') AS TRIMMED_SPACE; --MArk:characters in middle not removed.

------------------------------------------------------------------------------------------------------
                                             -- REVERSE
------------------------------------------------------------------------------------------------------

SELECT reverse('Hello');


------------------------------------------------------------------------------------------------------
                                             -- REPLACE
------------------------------------------------------------------------------------------------------

SELECT REPLACE('HELLO WORLD','WORLD','EARTH');

SELECT REPLACE('abcd','bc'); -- op: ab

-- Replace Whitespace with *
 select REPLACE( ' RONU MONDEEP MOHANTY ' ,' ','*');
 select REPLACE( ' RONU MONDEEP MOHANTY',' ','*');

 -- Replacing whitespace
 
SELECT REPLACE(' T E S T I N G 1 2 3 4 ',' ');


select replace('I love India','India','Odisha');

------------------------------------------------------------------------------------------------------
                                             -- REPEAT
------------------------------------------------------------------------------------------------------

SELECT REPEAT('Ronu',5);



------------------------------------------------------------------------------------------------------
                                             -- Lower
------------------------------------------------------------------------------------------------------

SELECT LOWER('RONU MONDEEP MOHANTY') AS LOWER_CASE;



------------------------------------------------------------------------------------------------------
                                             -- Upper
------------------------------------------------------------------------------------------------------

SELECT UPPER('ronu mondeep mohanty') AS UPPER_CASE;


------------------------------------------------------------------------------------------------------
                                             -- INITCAP
------------------------------------------------------------------------------------------------------
-- It returns the input string exp with the first letter of each word in uppercase and the subsequent 
-- letters in lowercase.

SELECT INITCAP(' INDIA Is MY cOUntRY') AS TITLE;



------------------------------------------------------------------------------------------------------
                                             -- SPLIT
------------------------------------------------------------------------------------------------------

-- split a string into multiple rows based on a delimiter.
--  useful when you want to split a string into multiple values and treat them as separate rows in your query.

-- RETURN TYPE ARRAY

SELECT SPLIT('Hello World',' ');


create or replace table aj_persons
(
 NAME CHAR(10),
 CHILDREN VARCHAR(30)
);

INSERT INTO AJ_PERSONS
VALUES('Mark','Marky,Mark Jr,Maria'),('John','Johnny,Jane');

SELECT * FROM AJ_PERSONS;

-- Split the children column
SELECT SPLIT(CHILDREN,',') FROM AJ_persons;

select spliT(children,',') from AJ_persons;

-- Split the custom agent_details column.

SELECT * FROM agents;

SELECT SPLIT(agent_details,'-') as split_details
FROM
(
SELECT *,concat(AGENT_CODE, '-', AGENT_NAME) AS agent_details FROM agents
) AS alias_table;

SELECT * FROM agents;


------------------------------------------------------------------------------------------------------
                                        -- SPLIT_PART
------------------------------------------------------------------------------------------------------

-- let's say you are asked to split and store the parts of split into 3 different columns

SELECT 'RONU MONDEEP MOHANTY' as Name, split_part('RONU MONDEEP MOHANTY',' ',1) AS first_name,
split_part('RONU MONDEEP MOHANTY',' ',2) AS mid_name,
split_part('RONU MONDEEP MOHANTY',' ', 3) AS last_name;

    -- 2 indicates you want to extract the second part after splitting the strings based on the delimiter space.
    -- 3 indiccates you want to extract the third part after splitting the strings based on the delimiter space. 

                                 

select * from agents; 

select *, 
      split_part(phone_no, '-',1) AS country_code,
      split_part(phone_no,'-',2) AS mobile_number
FROM agents; 


-- Let's say in a term which you will be splitting how could you find the number of split

-- 'Ronu-mondeep-mohanty' , count the number of split poissible here.
-- no of split = no of delimiters 

select length('Ronu-Mondeep-Mohanty') - length(REPLACE('Ronu-Mondeep-Mohanty','-','')) AS no_of_occurence;
-- we removed the delimiter by using replace, replaced - with ''
-- Calculated the length without delimiter.
-- substracted the same from the total length that is length with delimiter.
-- no of delimiters = no of split



select length('Ronu-Mondeep-Mohanty') - length(replace('Ronu-Mondeep-Mohanty','-')) AS c_ount;


SHOW TABLES IN DATABASE RM_STRING_FUNCTION;

SELECT *
FROM information_schema.tables
WHERE table_schema = 'RM_STRING_FUNCTION.public';


---------------------------------------------------------------------------------------------------------
                                             -- LIKE
---------------------------------------------------------------------------------------------------------

CREATE TABLE customer_activity
 (
    country VARCHAR(50),
    customer_key INT,
    card_number VARCHAR(16),
    activity_code VARCHAR(6),
    CONSTRAINT check_activity_code CHECK (activity_code REGEXP '^[a-zA-Z][a-zA-Z0-9]{5}$')
);

INSERT INTO customer_activity (country, customer_key, card_number, activity_code) VALUES
('USA', 1001, '1234567890123456', 'A12345'),
('UK', 1002, '2345678901234567', 'B23456'),
('Canada', 1003, '3456789012345678', 'C34567'),
('Australia', 1004, '4567890123456789', 'D45678'),
('Germany', 1005, '5678901234567890', 'E56789'),
('France', 1006, '6789012345678901', 'F67890'),
('Italy', 1007, '7890123456789012', 'G78901'),
('Spain', 1008, '8901234567890123', 'H89012'),
('Japan', 1009, '9012345678901234', 'I90123'),
('China', 1010, '0123456789012345', 'J01234'),
('India', 1011, '1234567890123456', 'K12345'),
('Brazil', 1012, '2345678901234567', 'L23456'),
('Mexico', 1013, '3456789012345678', 'M34567'),
('Argentina', 1014, '4567890123456789', 'N45678'),
('South Africa', 1015, '5678901234567890', 'O56789'),
('Russia', 1016, '6789012345678901', 'P67890'),
('South Korea', 1017, '7890123456789012', 'Q78901'),
('Nigeria', 1018, '8901234567890123', 'R89012'),
('Saudi Arabia', 1019, '9012345678901234', 'S90123'),
('United Arab Emirates', 1020, '0123456789012345', 'T01234'),
('Germany', 1021, '1234567890123456', 'U12345'),
('France', 1022, '2345678901234567', 'V23456'),
('Italy', 1023, '3456789012345678', 'W34567'),
('Spain', 1024, '4567890123456789', 'X45678'),
('Japan', 1025, '5678901234567890', 'Y56789'),
('China', 1026, '6789012345678901', 'Z67890'),
('Australia', 1027, '7890123456789012', 'A78901'),
('Canada', 1028, '8901234567890123', 'B89012'),
('Brazil', 1029, '9012345678901234', 'C90123'),
('Mexico', 1030, '0123456789012345', 'D01234');

SELECT * FROM customer_activity;
